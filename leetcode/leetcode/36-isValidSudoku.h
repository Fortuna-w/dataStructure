#pragma once
#include<iostream>
#include<vector>

using namespace std;

class Solution_isValidSudoku {
public:
	bool isValidSudoku(vector<vector<char>>& board) {
		vector<vector<int>> row(9, vector<int>(10));
		vector<vector<int>> column(9, vector<int>(10));
		vector<vector<vector<int>>> box(3, vector<vector<int>>(3, vector<int>(10)));
		for (int i = 0; i < 9; i++) {
			for (int j = 0; j < 9; j++) {
				if (board[i][j] != '.') {
					if (row[i][board[i][j] - '0']++) {
						return false;
					}
					if (column[j][board[i][j] - '0']++) {
						return false;
					}
					if (box[i/3][j/3][board[i][j] - '0']++) {
						return false;
					}
				}
			}
		}
		return true;
	}
};

void test_isValidSudoku() {
	vector<vector<char>> board = { {'5', '3', '.', '.', '7', '.', '.', '.', '.'},{'6', '.', '.', '1', '9', '5', '.', '.', '.'}, {'.', '9', '8', '.', '.', '.','.', '6', '.'},{'8', '.', '.', '.', '6', '.', '.', '.', '3'},{'4', '.', '.', '8', '.', '3', '.', '.', '1'},{'7', '.', '.', '.', '2', '.', '.', '.', '6'},{'.', '6', '.', '.', '.', '.', '2', '8', '.'},{'.', '.', '.', '4', '1', '9', '.', '.', '5'},{'.', '.', '.', '.', '8', '.', '.', '7', '9'} };
	Solution_isValidSudoku s;
	cout << s.isValidSudoku(board) << endl;


}


//{ {"5", "3", ".", ".", "7", ".", ".", ".", "."},{"6", ".", ".", "1", "9", "5", ".", ".", "."}, {".", "9", "8", ".", ".", ".", ".", "6", "."},{"8", ".", ".", ".", "6", ".", ".", ".", "3"},{"4", ".", ".", "8", ".", "3", ".", ".", "1"},{"7", ".", ".", ".", "2", ".", ".", ".", "6"},{".", "6", ".", ".", ".", ".", "2", "8", "."},{".", ".", ".", "4", "1", "9", ".", ".", "5"},{".", ".", ".", ".", "8", ".", ".", "7", "9"} };
//[["5", "3", ".", ".", "7", ".", ".", ".", "."]; ["6", ".", ".", "1", "9", "5", ".", ".", "."]; [".", "9", "8", ".", ".", ".", ".", "6", "."]; ["8", ".", ".", ".", "6", ".", ".", ".", "3"]; ["4", ".", ".", "8", ".", "3", ".", ".", "1"]; ["7", ".", ".", ".", "2", ".", ".", ".", "6"], [".", "6", ".", ".", ".", ".", "2", "8", "."]; [".", ".", ".", "4", "1", "9", ".", ".", "5"]; [".", ".", ".", ".", "8", ".", ".", "7", "9"]];